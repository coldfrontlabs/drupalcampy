3.2.14 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:
@linei:@options{ :@children[o:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;i;	@;
[ o:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	@;
[ o:Sass::Tree::VariableNode:@guarded"!default:
@name" default-transition-property:
@expro:Sass::Script::String	;:identifier;"all;i;	@;i;	@;
[ o;;"!default;" default-transition-duration;o:Sass::Script::Number:@denominator_units[ ;i:@numerator_units["s:@original"1s;i;	@;i;	@;
[ o;;"!default;" default-transition-function;o:Sass::Script::Bool;F;i;	@;i;	@;
[ o;;"!default;"default-transition-delay;o;;F;i;	@;i;	@;
[ o;;"!default;"#transitionable-prefixed-values;o:Sass::Script::List	;[o;	;;;"transform;i;	@o;	;;;"transform-origin;i;	@;i;	@:@separator:
comma;i;	@;
[ o;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	@;
[ o:Sass::Tree::MixinDefNode;"transition-property:
@args[[o:Sass::Script::Variable;"property-1;	@:@underscored_name"property_1o;"	;" default-transition-property;i&;	@;#" default_transition_property[o;";"property-2;	@;#"property_2o;;F;i';	@[o;";"property-3;	@;#"property_3o;;F;i(;	@[o;";"property-4;	@;#"property_4o;;F;i);	@[o;";"property-5;	@;#"property_5o;;F;i*;	@[o;";"property-6;	@;#"property_6o;;F;i+;	@[o;";"property-7;	@;#"property_7o;;F;i,;	@[o;";"property-8;	@;#"property_8o;;F;i-;	@[o;";"property-9;	@;#"property_9o;;F;i.;	@[o;";"property-10;	@;#"property_10o;;F;i/;	@;T;i0;	@;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"property-1:
@linei1:@options{ :@underscored_name"property_1;i1;@:@splat0:@operator:eq;i1;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;i1;@0[o:Sass::Tree::VariableNode:@guarded0;"property-1:
@expro;;"unquote;	{ ;
[o;	;"property-1;i1;@;"property_1;i1;@;0;i1;@:@children[ o;;0;"properties;o:Sass::Script::Funcall;"compact:@keywords{ ;![o;"	;"property-1;i2;	@;#"property_1o;"	;"property-2;i2;	@;#"property_2o;"	;"property-3;i2;	@;#"property_3o;"	;"property-4;i2;	@;#"property_4o;"	;"property-5;i2;	@;#"property_5o;"	;"property-6;i2;	@;#"property_6o;"	;"property-7;i2;	@;#"property_7o;"	;"property-8;i2;	@;#"property_8o;"	;"property-9;i2;	@;#"property_9o;"	;"property-10;i2;	@;#"property_10;i2;	@:@splat0;i2;	@;
[ u;$Å[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:
@linei3:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;[" -webkit-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;i3;@o; 	;"properties;i3;@;	"properties;i3;@:@splat0;i3:@prop_syntax:new;@:
@tabsi :@children[ u;$Á[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:
@linei4:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;["-moz-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;i4;@o; 	;"properties;i4;@;	"properties;i4;@:@splat0;i4:@prop_syntax:new;@:
@tabsi :@children[ u;$¹[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:
@linei5:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;["-o-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-o;i5;@o; 	;"properties;i5;@;	"properties;i5;@:@splat0;i5:@prop_syntax:new;@:
@tabsi :@children[ o:Sass::Tree::PropNode;["transition-property;o;"	;"properties;i6;	@;#"properties;i6:@prop_syntax:new;	@:
@tabsi ;
[ ;'0o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	@;
[ o; ;"transition-duration;![[o;";"duration-1;	@;#"duration_1o;"	;" default-transition-duration;i>;	@;#" default_transition_duration[o;";"duration-2;	@;#"duration_2o;;F;i?;	@[o;";"duration-3;	@;#"duration_3o;;F;i@;	@[o;";"duration-4;	@;#"duration_4o;;F;iA;	@[o;";"duration-5;	@;#"duration_5o;;F;iB;	@[o;";"duration-6;	@;#"duration_6o;;F;iC;	@[o;";"duration-7;	@;#"duration_7o;;F;iD;	@[o;";"duration-8;	@;#"duration_8o;;F;iE;	@[o;";"duration-9;	@;#"duration_9o;;F;iF;	@[o;";"duration-10;	@;#"duration_10o;;F;iG;	@;T;iH;	@;
[u;$Ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"duration-1:
@lineiI:@options{ :@underscored_name"duration_1;iI;@:@splat0:@operator:eq;iI;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;iI;@0[o:Sass::Tree::VariableNode:@guarded0;"duration-1:
@expro;;"unquote;	{ ;
[o;	;"duration-1;iI;@;"duration_1;iI;@;0;iI;@:@children[ o;;0;"durations;o;%;"compact;&{ ;![o;"	;"duration-1;iJ;	@;#"duration_1o;"	;"duration-2;iJ;	@;#"duration_2o;"	;"duration-3;iJ;	@;#"duration_3o;"	;"duration-4;iJ;	@;#"duration_4o;"	;"duration-5;iJ;	@;#"duration_5o;"	;"duration-6;iJ;	@;#"duration_6o;"	;"duration-7;iJ;	@;#"duration_7o;"	;"duration-8;iJ;	@;#"duration_8o;"	;"duration-9;iJ;	@;#"duration_9o;"	;"duration-10;iJ;	@;#"duration_10;iJ;	@;'0;iJ;	@;
[ o:Sass::Tree::MixinNode;"experimental;&{ ;![o;	;;;"transition-duration;iK;	@o;"	;"durations;iK;	@;#"durationso;	;;;"	-moz;iL;	@o;	;;;"-webkit;iL;	@o;	;;;"-o;iL;	@o:!Sass::Script::UnaryOperation	:@operando;	;;;"-ms;iL;	@:@operator:not;iL;	@o;-	;.o;	;;;"-khtml;iL;	@;/;0;iL;	@o;	;;;"official;iL;	@;iM;	@;
[ ;'0;'0o;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	@;
[ o; ;"transition-timing-function;![[o;";"function-1;	@;#"function_1o;"	;" default-transition-function;iV;	@;#" default_transition_function[o;";"function-2;	@;#"function_2o;;F;iW;	@[o;";"function-3;	@;#"function_3o;;F;iX;	@[o;";"function-4;	@;#"function_4o;;F;iY;	@[o;";"function-5;	@;#"function_5o;;F;iZ;	@[o;";"function-6;	@;#"function_6o;;F;i[;	@[o;";"function-7;	@;#"function_7o;;F;i\;	@[o;";"function-8;	@;#"function_8o;;F;i];	@[o;";"function-9;	@;#"function_9o;;F;i^;	@[o;";"function-10;	@;#"function_10o;;F;i_;	@;T;i`;	@;
[o;;0;"function-1;o;%;"unquote;&{ ;![o;"	;"function-1;ia;	@;#"function_1;ia;	@;'0;ia;	@;
[ o;;0;"functions;o;%;"compact;&{ ;![o;"	;"function-1;ib;	@;#"function_1o;"	;"function-2;ib;	@;#"function_2o;"	;"function-3;ib;	@;#"function_3o;"	;"function-4;ib;	@;#"function_4o;"	;"function-5;ib;	@;#"function_5o;"	;"function-6;ib;	@;#"function_6o;"	;"function-7;ib;	@;#"function_7o;"	;"function-8;ib;	@;#"function_8o;"	;"function-9;ib;	@;#"function_9o;"	;"function-10;ib;	@;#"function_10;ib;	@;'0;ib;	@;
[ o;,;"experimental;&{ ;![o;	;;;"transition-timing-function;ic;	@o;"	;"functions;ic;	@;#"functionso;	;;;"	-moz;id;	@o;	;;;"-webkit;id;	@o;	;;;"-o;id;	@o;-	;.o;	;;;"-ms;id;	@;/;0;id;	@o;-	;.o;	;;;"-khtml;id;	@;/;0;id;	@o;	;;;"official;id;	@;ie;	@;
[ ;'0;'0o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	@;
[ o; ;"transition-delay;![[o;";"delay-1;	@;#"delay_1o;"	;"default-transition-delay;im;	@;#"default_transition_delay[o;";"delay-2;	@;#"delay_2o;;F;in;	@[o;";"delay-3;	@;#"delay_3o;;F;io;	@[o;";"delay-4;	@;#"delay_4o;;F;ip;	@[o;";"delay-5;	@;#"delay_5o;;F;iq;	@[o;";"delay-6;	@;#"delay_6o;;F;ir;	@[o;";"delay-7;	@;#"delay_7o;;F;is;	@[o;";"delay-8;	@;#"delay_8o;;F;it;	@[o;";"delay-9;	@;#"delay_9o;;F;iu;	@[o;";"delay-10;	@;#"delay_10o;;F;iv;	@;T;iw;	@;
[u;$Ê[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"delay-1:
@lineix:@options{ :@underscored_name"delay_1;ix;@:@splat0:@operator:eq;ix;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;ix;@0[o:Sass::Tree::VariableNode:@guarded0;"delay-1:
@expro;;"unquote;	{ ;
[o;	;"delay-1;ix;@;"delay_1;ix;@;0;ix;@:@children[ o;;0;"delays;o;%;"compact;&{ ;![o;"	;"delay-1;iy;	@;#"delay_1o;"	;"delay-2;iy;	@;#"delay_2o;"	;"delay-3;iy;	@;#"delay_3o;"	;"delay-4;iy;	@;#"delay_4o;"	;"delay-5;iy;	@;#"delay_5o;"	;"delay-6;iy;	@;#"delay_6o;"	;"delay-7;iy;	@;#"delay_7o;"	;"delay-8;iy;	@;#"delay_8o;"	;"delay-9;iy;	@;#"delay_9o;"	;"delay-10;iy;	@;#"delay_10;iy;	@;'0;iy;	@;
[ o;,;"experimental;&{ ;![o;	;;;"transition-delay;iz;	@o;"	;"delays;iz;	@;#"delayso;	;;;"	-moz;i{;	@o;	;;;"-webkit;i{;	@o;	;;;"-o;i{;	@o;-	;.o;	;;;"-ms;i{;	@;/;0;i{;	@o;-	;.o;	;;;"-khtml;i{;	@;/;0;i{;	@o;	;;;"official;i{;	@;i|;	@;
[ ;'0;'0o;
;;;["*/* Transition all-in-one shorthand */;i;	@;
[ o; ;"single-transition;![	[o;";"property;	@;#"propertyo;"	;" default-transition-property;i};	@;#" default_transition_property[o;";"duration;	@;#"durationo;"	;" default-transition-duration;i~;	@;#" default_transition_duration[o;";"function;	@;#"functiono;"	;" default-transition-function;i;	@;#" default_transition_function[o;";"
delay;	@;#"
delayo;"	;"default-transition-delay;i;	@;#"default_transition_delay;T;i;	@;
[o;,;"transition;&{ ;![o;%;"compact;&{ ;![o;	;[	o;"	;"property;i;	@;#"propertyo;"	;"duration;i;	@;#"durationo;"	;"function;i;	@;#"functiono;"	;"
delay;i;	@;#"
delay;i;	@;:
space;i;	@;'0;i;	@;
[ ;'0;'0o; ;"transition;![[o;";"transition-1;	@;#"transition_1o;	;;;"default;i;	@[o;";"transition-2;	@;#"transition_2o;;F;i;	@[o;";"transition-3;	@;#"transition_3o;;F;i;	@[o;";"transition-4;	@;#"transition_4o;;F;i;	@[o;";"transition-5;	@;#"transition_5o;;F;i;	@[o;";"transition-6;	@;#"transition_6o;;F;i;	@[o;";"transition-7;	@;#"transition_7o;;F;i;	@[o;";"transition-8;	@;#"transition_8o;;F;i;	@[o;";"transition-9;	@;#"transition_9o;;F;i;	@[o;";"transition-10;	@;#"transition_10o;;F;i;	@;T;i;	@;
[u;$÷[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"transition-1:
@linei:@options{ :@underscored_name"transition_1:@operator:eq;	i;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"default;	i;
@	0[o:Sass::Tree::VariableNode:@guarded0;"transition-1:
@expro:Sass::Script::Funcall;"compact:@keywords{ :
@args[o:Sass::Script::List	;[	o;	;" default-transition-property;	i;
@	;" default_transition_propertyo;	;" default-transition-duration;	i;
@	;" default_transition_durationo;	;" default-transition-function;	i;
@	;" default_transition_functiono;	;"default-transition-delay;	i;
@	;"default_transition_delay;	i;
@	:@separator:
space;	i;
@	:@splat0;	i;
@	:@children[ o;;0;"transitions;o;;F;i;	@;i;	@;
[ u;$[o:Sass::Script::Operation
:@operand1o; 
;o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"transition-1:
@linei:@options{ :@underscored_name"transition_1;i;@:@splat0:@operator:eq;i;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;i;@;:and;i;@;o; 
;o;;"type-of;	{ ;
[o;;"nth;	{ ;
[o;	;"transition-1;i;@;"transition_1o:Sass::Script::Number:@denominator_units[ ;i:@numerator_units[ :@original"1;i;@;i;@;0;i;@;0;;;i;@;o;	;;;"	list;i;@u:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@name"transitions:
@expro:Sass::Script::Funcall;"compact:@keywords{ :
@args[o:Sass::Script::Variable	;"transition-1:
@linei:@options{ :@underscored_name"transition_1o;	;"transition-2;i;@;"transition_2o;	;"transition-3;i;@;"transition_3o;	;"transition-4;i;@;"transition_4o;	;"transition-5;i;@;"transition_5o;	;"transition-6;i;@;"transition_6o;	;"transition-7;i;@;"transition_7o;	;"transition-8;i;@;"transition_8o;	;"transition-9;i;@;"transition_9o;	;"transition-10;i;@;"transition_10;i;@:@splat0;i;@:@children[ [o:Sass::Tree::VariableNode:@guarded0;"transitions:
@expro;;"	join;	{ ;
[o;	;"transition-1;i;@;"transition_1o;;"compact;	{ ;
[o;	;"transition-2;i;@;"transition_2o;	;"transition-3;i;@;"transition_3o;	;"transition-4;i;@;"transition_4o;	;"transition-5;i;@;"transition_5o;	;"transition-6;i;@;"transition_6o;	;"transition-7;i;@;"transition_7o;	;"transition-8;i;@;"transition_8o;	;"transition-9;i;@;"transition_9o;	;"transition-10;i;@;"transition_10;i;@;0o;	;;;"
comma;i;@;i;@;0;i;@:@children[ o;;0;"delays;o;%;"comma-list;&{ ;![ ;i;	@;'0;i;	@;
[ o;;0;"has-delays;o;;F;i;	@;i;	@;
[ o;;0;"webkit-value;o;%;"comma-list;&{ ;![ ;i;	@;'0;i;	@;
[ o;;0;"moz-value;o;%;"comma-list;&{ ;![ ;i;	@;'0;i;	@;
[ o;;0;"o-value;o;%;"comma-list;&{ ;![ ;i;	@;'0;i;	@;
[ o;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	@;
[ o:Sass::Tree::EachNode:
@listo;"	;"transitions;i¢;	@;#"transitions;T;i¢;	@:	@var"transition;
[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	@;
[ o;;0;"property;o;%;"nth;&{ ;![o;"	;"transition;i¥;	@;#"transitiono;;[ ;i;[ ;"1;i¥;	@;i¥;	@;'0;i¥;	@;
[ o;;0;"duration;o;;F;i¦;	@;i¦;	@;
[ o;;0;"timing-function;o;;F;i§;	@;i§;	@;
[ o;;0;"
delay;o;;F;i¨;	@;i¨;	@;
[ u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition:
@linei©:@options{ :@underscored_name"transition;i©;@:@splat0:@operator:gt;i©;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei:@numerator_units[ :@original"1;i©;@0[o:Sass::Tree::VariableNode:@guarded0;"duration:
@expro;;"nth;	{ ;
[o;	;"transition;i©;@;"transitiono;;@;i;[ ;"2;i©;@;i©;@;0;i©;@:@children[ u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition:
@lineiª:@options{ :@underscored_name"transition;iª;@:@splat0:@operator:gt;iª;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei:@numerator_units[ :@original"2;iª;@0[o:Sass::Tree::VariableNode:@guarded0;"timing-function:
@expro;;"nth;	{ ;
[o;	;"transition;iª;@;"transitiono;;@;i;[ ;"3;iª;@;iª;@;0;iª;@:@children[ u;$Y[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition:
@linei«:@options{ :@underscored_name"transition;i«;@:@splat0:@operator:gt;i«;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei:@numerator_units[ :@original"3;i«;@0[o:Sass::Tree::VariableNode:@guarded0;"
delay:
@expro;;"nth;	{ ;
[o;	;"transition;i«;@;"transitiono;;@;i	;[ ;"4;i«;@;i«;@;0;i«;@:@children[ o;;0;"has-delays;o:Sass::Script::Bool;T;i«;@;i«;@;[ o;
;;;[";/* If a delay is provided without a timing function */;i­;	@;
[ u;$g[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"is-time:@keywords{ :
@args[o:Sass::Script::Variable	;"timing-function:
@linei®:@options{ :@underscored_name"timing_function;i®;@:@splat0:@operator:and;i®;@:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"
delay;i®;@;"
delay;:not;i®;@0[o:Sass::Tree::VariableNode:@guarded0;"
delay:
@expro;	;"timing-function;i®;@;"timing_function;i®;@:@children[ o;;0;"timing-function;o:Sass::Script::Bool:@valueF;i®;@;i®;@;[ o;;0;"has-delays;o;;T;i®;@;i®;@;[ o;
;;;["9/* Keep a list of delays in case one is specified */;i°;	@;
[ o;;0;"delays;o;%;"append;&{ ;![o;"	;"delays;i±;	@;#"delayso;%;"if;&{ ;![o;"	;"
delay;i±;	@;#"
delayo;"	;"
delay;i±;	@;#"
delayo;;[ ;i ;["s;"0s;i±;	@;i±;	@;'0;i±;	@;'0;i±;	@;
[ o;;0;"webkit-value;o;%;"append;&{ ;![o;"	;"webkit-value;i³;	@;#"webkit_valueo;%;"compact;&{ ;![o;	;[o;%;"prefixed-for-transition;&{ ;![o;	;;;"-webkit;i³;	@o;"	;"property;i³;	@;#"property;i³;	@;'0o;"	;"duration;i³;	@;#"durationo;"	;"timing-function;i³;	@;#"timing_function;i³;	@;;1;i³;	@;'0;i³;	@;'0;i³;	@;
[ o;;0;"moz-value;o;%;"append;&{ ;![o;"	;"moz-value;i´;	@;#"moz_valueo;%;"compact;&{ ;![o;	;[	o;%;"prefixed-for-transition;&{ ;![o;	;;;"	-moz;i´;	@o;"	;"property;i´;	@;#"property;i´;	@;'0o;"	;"duration;i´;	@;#"durationo;"	;"timing-function;i´;	@;#"timing_functiono;"	;"
delay;i´;	@;#"
delay;i´;	@;;1;i´;	@;'0;i´;	@;'0;i´;	@;
[ o;;0;"o-value;o;%;"append;&{ ;![o;"	;"o-value;iµ;	@;#"o_valueo;%;"compact;&{ ;![o;	;[	o;%;"prefixed-for-transition;&{ ;![o;	;;;"-o;iµ;	@o;"	;"property;iµ;	@;#"property;iµ;	@;'0o;"	;"duration;iµ;	@;#"durationo;"	;"timing-function;iµ;	@;#"timing_functiono;"	;"
delay;iµ;	@;#"
delay;iµ;	@;;1;iµ;	@;'0;iµ;	@;'0;iµ;	@;
[ u;$Ý[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:
@linei¸:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo; 	;"webkit-value;i¸;@;	"webkit_value;i¸:@prop_syntax:new;@:
@tabsi :@children[ o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;@;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:
@lineiº:@options{ :@underscored_name"has_delays0[o:Sass::Tree::PropNode;["-webkit-transition-delay:@valueo; 	;"delays;iº;@;	"delays;iº:@prop_syntax:new;@:
@tabsi :@children[ u;$#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:
@linei»:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;["-moz-transition:@valueo; 	;"moz-value;i»;@;	"moz_value;i»:@prop_syntax:new;@:
@tabsi :@children[ u;$[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:
@linei¼:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;["-o-transition:@valueo; 	;"o-value;i¼;@;	"o_value;i¼:@prop_syntax:new;@:
@tabsi :@children[ o;(;["transition;o;"	;"transitions;i½;	@;#"transitions;i½;);*;	@;+i ;
[ ;'0o;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	@;
[ o:Sass::Tree::FunctionNode;"comma-list;![[o;";"	list;	@;#"	listo;	;[ ;iÁ;	@;;1;T;iÁ;	@;
[o:Sass::Tree::ReturnNode	;o;%;"	join;&{ ;![o;	;[ ;iÂ;	@;;1o;"	;"	list;iÂ;	@;#"	listo;	;;;"
comma;iÂ;	@;iÂ;	@;'0;iÂ;	@;
[ ;'0o;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	@;
[ o;5;"prefixed-for-transition;![[o;";"prefix;	@;#"prefix0[o;";"property;	@;#"property0;T;iÆ;	@;
[u;$®[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"property:
@lineiÇ:@options{ :@underscored_name"property;iÇ;@:@splat0:@operator:eq;iÇ;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;iÇ;@u:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@name"
index:@keywords{ :
@args[o:Sass::Script::Variable	;"#transitionable-prefixed-values:
@lineiÎ:@options{ :@underscored_name"#transitionable_prefixed_valueso;		;"property;
iÎ;@;"property;
iÎ;@:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@name"property:
@lineiÑ:@options{ :@underscored_name"property;	iÑ;
@
:@children[ [o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0:@whitespace_beforei:@aftero;;0;o;;F;0;0;0;
iÏ;@:@originally_text:originally_text:	@mido:Sass::Script::String	:
@type:identifier:@value"-;
iÏ;@;0;0;
iÏ;@;F;o;		;"property;
iÏ;@;"property;
iÏ;@;F;o;		;"prefix;
iÏ;@;"prefix;
iÏ;@:@children[ [o:Sass::Tree::VariableNode:@guarded0;"new-list:
@expro;;"comma-list;	{ ;
[ ;iÈ;@;0;iÈ;@:@children[ o:Sass::Tree::EachNode:
@listo;	;"property;iÉ;@;"property:@has_childrenT;iÉ;@:	@var"v;[o;;0;"new-list;o;;"append;	{ ;
[o;	;"new-list;iÊ;@;"new_listo;;"prefixed-for-transition;	{ ;
[o;	;"prefix;iÊ;@;"prefixo;	;"v;iÊ;@;"v;iÊ;@;0;iÊ;@;0;iÊ;@;[ o:Sass::Tree::ReturnNode	;o;	;"new-list;iÌ;@;"new_list;iÌ;@;[ ;'0o;
;;;["7/* Checks if the value given is a unit of time. */;iÖ;	@;
[ o;5;"is-time;![[o;";"
value;	@;#"
value0;T;i×;	@;
[u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"
value:
@lineiØ:@options{ :@underscored_name"
value;iØ;@:@splat0:@operator:eq;iØ;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"number;iØ;@u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;	iÛ;
@	:@children[ [o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	:@operando;	;o;;"
index;	{ ;
[o:Sass::Script::List	;[o;	;;;"s;iÙ;@o;	;;;"ms;iÙ;@;iÙ;@:@separator:
spaceo;;"	unit;	{ ;
[o;	;"
value;iÙ;@;"
value;iÙ;@;0;iÙ;@;0;:not;iÙ;@;;;iÙ;@;iÙ;@:@children[ ;'0